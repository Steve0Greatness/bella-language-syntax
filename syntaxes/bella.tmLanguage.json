{
	"$schema": "https://raw.githubusercontent.com/martinring/tmlanguage/master/tmlanguage.json",
	"name": "Bella",
	"patterns": [
		{
			"include": "#keywords"
		},
		{
			"include": "#strings"
		},
		{
			"include": "#characters"
		},
		{
			"include": "#comments"
		},
		{
			"include": "#boolean"
		},
		{
			"include": "#entity"
		},
		{
			"include": "#constant"
		}
	],
	"repository": {
		"keywords": {
			"patterns": [
				{
					"name": "keyword.control.bella",
					"match": "\\b(if|try|else|let|in|import|throw)\\b"
				},			
				{
					"name": "keyword.operator.comparison.int.bella",
					"match": "(<=|>=|==|!=|<|>)"
				},
				{
					"name": "keyword.operator.arithmetic.int.bella",
					"match": "(\\+|\\-|/|\\*)"
				},
				{
					"name": "keyword.operator.logical.bella",
					"match": "(and|or)"
				},
				{
					"name": "keyword.operator.arrow.bella",
					"match": "(->)"
				},
				{
					"name": "keyword.operator.other.bella",
					"match": "(\\|>)"
				}
			]
		},
		"strings": {
			"name": "string.quoted.double.bella",
			"begin": "\"",
			"end": "\"",
			"patterns": [
				{
					"name": "constant.character.escape.bella",
					"match": "\\\\."
				}
			]
		},
		"characters": {
			"name": "string.quoted.single.bella",
			"begin": "'",
			"end": "'",
			"patterns": [
				{
					"name": "constant.character.escape.bella",
					"match": "\\\\."
				}
			]
		},
		"comments": {
			"patterns": [
			  {
				"name": "comment.line.bella",
				"match": ";.*"
			  }
			]
		},
		"boolean": {
			"name": "constant.language.boolean.bella",
			"match": "\\b(true|false)\\b",
			"patterns": []
		},
		"constant": {
			"patterns": [
				{
					"name": "constant.numeric.bella",
					"match": "\\b[0-9]+\\b"
				}
			]
		},
		"entity": {
			"patterns": [
			  {
				"begin": "\\b([[:lower:]][[:word:]]*)([[:space:]]*)?\\(",
				"end": "\\)",
				"patterns": [
				  {
					"include": "$self"
				  }
				],
				"captures": {
				  "1": {
					"name": "entity.name.function.bella"
				  }
				}
			  },
			  {
				"name": "variable.parameter.gleam",
				"match": "\\b([[:lower:]][[:word:]]*):\\s"
			  },
			  {
				"name": "entity.name.namespace.gleam",
				"match": "\\b([[:lower:]][[:word:]]*):"
			  }
			]
		  }
	},
	"scopeName": "source.bella"
}